#pragma version >=0.4.0;

;; Imports
#include "stdlib.fc";

slice get_the_latest_sender() method_id {
    slice ds = get_data().begin_parse();
    int counter = ds~load_uint(32);
    slice latest_sender  = ds~load_msg_addr();
    return latest_sender;
}

int get_sum() method_id {
    cell data_cell = get_data();
    slice data_slice = data_cell.begin_parse();
    return data_slice~load_uint(32);
}

(int, slice) get_contract_storage_data() method_id {
    slice ds = get_data().begin_parse();
    return (
        ds~load_uint(32), ;; counter_value
        ds~load_msg_addr() ;; the most recent sender
    );
}

() recv_internal(int msg_value, cell in_msg, slice in_msg_body) impure {
    slice cs = in_msg.begin_parse();
    int flags = cs~load_uint(4);
    slice sender_address = cs~load_msg_addr();

    int op = in_msg_body~load_uint(32);  ;; OP code
    int number = in_msg_body~load_uint(32); ;; increment_by value

    ;; int total = get_sum();
    ;; total += number;
    ;; set_data(begin_cell().store_uint(total,32).store_slice(sender_address).end_cell());



    if (op == 1) {
        slice ds = get_data().begin_parse();
        int counter_value = ds~load_uint(32);
        set_data(
            begin_cell().store_uint(counter_value + number, 32).store_slice(sender_address).end_cell()
        );
        return ();
    }

    return ();
}



